name: Get Version Format
on:
  workflow_call:
    inputs:
      type:
        description: "Versioning format"
        required: false
        type: string
        default: Stable
    outputs:
      version_format:
        description: "Versioning format"
        value: ${{ jobs.get-version-format.outputs.version_format }}
      prerelease:
        description: "Prerelease"
        value: ${{ jobs.get-version-format.outputs.prerelease }}
permissions: {}

jobs:
  get-version-format:
    runs-on: ubuntu-latest
    steps:
      - name: Determine version format
        id: version_format
        run: |
          if [[ "${{ github.event.inputs.type }}" == "Stable" ]]; then
              v_format="v\${major}.\${minor}.\${patch}"
              prerelease=false
          elif [[ "${{ github.event.inputs.type }}" == "Edge" ]]; then
              v_format="v\${major}.\${minor}.\${patch}-edge\${increment}"
              prerelease=true
          elif [[ "${{ github.event.inputs.type }}" == "Auto-Build" ]]; then
              v_format="v\${major}.\${minor}.\${patch}-auto\${increment}"
              prerelease=true
          else
              echo "Unknown type: ${{ github.event.inputs.type }}"
              exit 1
          fi
          echo "Version Format is $v_format"
          echo "version_format=$v_format" >> "$GITHUB_OUTPUT"
          echo "prerelease=$prerelease" >> "$GITHUB_OUTPUT"
        shell: bash
    outputs:
      version_format: ${{ steps.version_format.outputs.version_format }}
      prerelease: ${{ steps.version_format.outputs.prerelease }}

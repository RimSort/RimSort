name: Edge release (build for all platforms)
on:
  push:
    tags:
      - 'Edge'
  workflow_dispatch:

jobs:
  call-build:
    uses: ./.github/workflows/build.yml

  release:
    runs-on: ubuntu-latest
    steps:
      # Check-out repository
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: Edge
      # Authenticate gh
      - name: Authenticate gh
        run: gh auth login --with-token <<< "${{ secrets.TWSTA_ACTIONS }}"
      # Create Edge release
      - name: Handle the Edge Release
        run: |
          # Obtain the GitHub Action run URL
          ACTION_RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          # Check if the "Edge" release exists
          OUTPUT=$(gh release view Edge 2>&1) || true
          if [[ $OUTPUT != *"release not found"* ]]; then
            echo "Release already exists. Replacing it."
            gh release delete Edge --yes
          fi
          gh release create \
          Edge \
          --title "Edge ${{ needs.build.outputs.sha_short }}" \
          --notes "This is a bleeding Edge release, built off of main branch. Refer to SHA ${{ needs.build.outputs.sha_short }} commit reference.
          
          [Click here to see the action that created this release.]($ACTION_RUN_URL)" \
          --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.TWSTA_ACTIONS }}
      # Download artifacts
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      # Upload artifacts to release
      - name: Upload assets to the Edge release
        run: |
          for artifact_dir in RimSort-Edge*; do
            artifact="$artifact_dir/$artifact_dir"
            if [[ -f "$artifact" ]]; then
              echo "Uploading artifact $artifact..."
              gh release upload Edge "$artifact"
            else
              echo "Warning: Expected artifact file not found: $artifact"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.TWSTA_ACTIONS }}
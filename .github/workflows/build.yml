name: Build
on:
  workflow_call: null
  workflow_dispatch: null

permissions: {}

jobs:
  build:
    permissions:
      id-token: write
      contents: read

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-13
            platform: "Darwin"
            arch: "i386"
          - os: macos-latest
            platform: "Darwin"
            arch: "arm"
          - os: ubuntu-latest
            platform: "Linux"
            arch: "x86_64"
          - os: windows-latest
            platform: "Windows"
            arch: "x86_64"
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          architecture: "x64" # optional x64 or x86. Defaults to x64 if not specified
          cache: "pip"
          cache-dependency-path: |
            **/requirements*.txt

      - name: Install Dependencies
        run: pip install -r requirements.txt -r requirements_develop.txt

      - name: Build
        shell: bash
        run: |
          set -e
          python distribute.py --skip-deps
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set FILENAME
        id: filename
        run: |
          FILENAME="${{ matrix.platform }}_${{ matrix.arch }}"
          echo "FILENAME=$FILENAME" >> $GITHUB_OUTPUT
        shell: bash

      - name: Delete old build, rename new build
        run: |
          rm -rf ./build/"${{ steps.filename.outputs.FILENAME }}"
          mv ./build/ "${{ steps.filename.outputs.FILENAME }}"
       
        # Upload folder as artifact
      - name: Upload folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.filename.outputs.FILENAME }}
          path: ./build/${{ steps.filename.outputs.FILENAME }}
    outputs:
      filename: ${{ steps.filename.outputs.FILENAME }}

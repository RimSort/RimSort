name: Alpha release (build for all platforms)
on:
  push:
    tags:
      - 'alpha-v*'
  workflow_dispatch:

jobs:
  call-build:
    uses: ./.github/workflows/build.yml
  
  release:
    needs: call-build
    runs-on: ubuntu-latest
    steps:
      # Check-out repository
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
          ref: ${{ needs.build.outputs.raw_tag_name }}
      # Authenticate gh
      - name: Authenticate gh
        run: gh auth login --with-token <<< "${{ secrets.TWSTA_ACTIONS }}"
      # Generate changelog
      - name: Generate changelog
        uses: Bullrich/generate-release-changelog@master
        id: changelog
        env:
          REPO: ${{ github.repository }}
      # Create Alpha release
      - name: Handle the Alpha Release
        run: |
            # Obtain the GitHub Action run URL
            ACTION_RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            # Check if the tag has already been released
            OUTPUT=$(gh release view "${{ needs.build.outputs.raw_tag_name }}" 2>&1) || true
            if [[ $OUTPUT != *"release not found"* ]]; then
              echo "Release already exists. Replacing it."
              gh release delete "${{ needs.build.outputs.raw_tag_name }}" --yes
            fi
            gh release create \
            "${{ needs.build.outputs.raw_tag_name }}" \
            --title "$(echo ${{ needs.build.outputs.formatted_tag_name }} | sed 's/Alpha-v/Alpha /')" \
            --notes "${{ steps.changelog.outputs.changelog }}
            
            [Click here to see the action that created this release.]($ACTION_RUN_URL)"
        env:
          GITHUB_TOKEN: ${{ secrets.TWSTA_ACTIONS }}
      # Download artifacts
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      # Upload artifacts to release
      - name: Upload assets to the Alpha release
        run: |
          for artifact_dir in RimSort-Alpha*; do
            artifact="$artifact_dir/$artifact_dir"
            if [[ -f "$artifact" ]]; then
              echo "Uploading artifact $artifact..."
              gh release upload "${{ needs.build.outputs.raw_tag_name }}" "$artifact"
            else
              echo "Warning: Expected artifact file not found: $artifact"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.TWSTA_ACTIONS }}